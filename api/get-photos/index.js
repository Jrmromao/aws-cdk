"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPhotos = void 0;
const aws_sdk_1 = require("aws-sdk");
const bucketName = process.env.PHOTO_BUCKET_NAME;
const s3 = new aws_sdk_1.S3();
const generateUrl = async (object) => {
    const url = await s3.getSignedUrlPromise("getObject", {
        Bucket: bucketName,
        Key: object.Key,
        Expires: 24 * 60 * 60,
    });
    return {
        fileName: object.Key,
        url,
    };
};
async function getPhotos(event, context) {
    console.log("I got the name: ", bucketName);
    try {
        const { Contents: result } = await s3
            .listObjects({ Bucket: bucketName })
            .promise();
        const photos = await Promise.all(result.map((result) => generateUrl(result)));
        return {
            statusCode: 200,
            body: JSON.stringify(photos),
        };
    }
    catch (error) {
        return {
            statusCode: 500,
        };
    }
}
exports.getPhotos = getPhotos;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFLQSxxQ0FBNkI7QUFFN0IsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBa0IsQ0FBQztBQUNsRCxNQUFNLEVBQUUsR0FBRyxJQUFJLFlBQUUsRUFBRSxDQUFDO0FBRXBCLE1BQU0sV0FBVyxHQUFHLEtBQUssRUFDdkIsTUFBaUIsRUFDMkIsRUFBRTtJQUM5QyxNQUFNLEdBQUcsR0FBRyxNQUFNLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUU7UUFDcEQsTUFBTSxFQUFFLFVBQVU7UUFDbEIsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFJO1FBQ2hCLE9BQU8sRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUU7S0FDdEIsQ0FBQyxDQUFDO0lBQ0gsT0FBTztRQUNMLFFBQVEsRUFBRSxNQUFNLENBQUMsR0FBSTtRQUNyQixHQUFHO0tBQ0osQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLEtBQUssVUFBVSxTQUFTLENBQ3RCLEtBQTZCLEVBQzdCLE9BQWdCO0lBRWhCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFNUMsSUFBSTtRQUNGLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEdBQUcsTUFBTSxFQUFFO2FBQ2xDLFdBQVcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsQ0FBQzthQUNuQyxPQUFPLEVBQUUsQ0FBQztRQUViLE1BQU0sTUFBTSxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FDOUIsTUFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQzdDLENBQUM7UUFDRixPQUFPO1lBQ0wsVUFBVSxFQUFFLEdBQUc7WUFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7U0FDN0IsQ0FBQztLQUNIO0lBQUMsT0FBTyxLQUFLLEVBQUU7UUFDZCxPQUFPO1lBQ0wsVUFBVSxFQUFFLEdBQUc7U0FDaEIsQ0FBQztLQUNIO0FBQ0gsQ0FBQztBQUNRLDhCQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQVBJR2F0ZXdheVByb3h5RXZlbnRWMixcbiAgQVBJR2F0ZXdheVByb3h5UmVzdWx0VjIsXG4gIENvbnRleHQsXG59IGZyb20gXCJhd3MtbGFtYmRhXCI7XG5pbXBvcnQgeyBTMyB9IGZyb20gXCJhd3Mtc2RrXCI7XG5cbmNvbnN0IGJ1Y2tldE5hbWUgPSBwcm9jZXNzLmVudi5QSE9UT19CVUNLRVRfTkFNRSE7XG5jb25zdCBzMyA9IG5ldyBTMygpO1xuXG5jb25zdCBnZW5lcmF0ZVVybCA9IGFzeW5jIChcbiAgb2JqZWN0OiBTMy5PYmplY3Rcbik6IFByb21pc2U8eyBmaWxlTmFtZTogc3RyaW5nOyB1cmw6IHN0cmluZyB9PiA9PiB7XG4gIGNvbnN0IHVybCA9IGF3YWl0IHMzLmdldFNpZ25lZFVybFByb21pc2UoXCJnZXRPYmplY3RcIiwge1xuICAgIEJ1Y2tldDogYnVja2V0TmFtZSxcbiAgICBLZXk6IG9iamVjdC5LZXkhLFxuICAgIEV4cGlyZXM6IDI0ICogNjAgKiA2MCxcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgZmlsZU5hbWU6IG9iamVjdC5LZXkhLFxuICAgIHVybCxcbiAgfTtcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFBob3RvcyhcbiAgZXZlbnQ6IEFQSUdhdGV3YXlQcm94eUV2ZW50VjIsXG4gIGNvbnRleHQ6IENvbnRleHRcbik6IFByb21pc2U8QVBJR2F0ZXdheVByb3h5UmVzdWx0VjI+IHtcbiAgY29uc29sZS5sb2coXCJJIGdvdCB0aGUgbmFtZTogXCIsIGJ1Y2tldE5hbWUpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBDb250ZW50czogcmVzdWx0IH0gPSBhd2FpdCBzM1xuICAgICAgLmxpc3RPYmplY3RzKHsgQnVja2V0OiBidWNrZXROYW1lIH0pXG4gICAgICAucHJvbWlzZSgpO1xuXG4gICAgY29uc3QgcGhvdG9zID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICByZXN1bHQhLm1hcCgocmVzdWx0KSA9PiBnZW5lcmF0ZVVybChyZXN1bHQpKVxuICAgICk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBob3RvcyksXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzQ29kZTogNTAwLFxuICAgIH07XG4gIH1cbn1cbmV4cG9ydCB7IGdldFBob3RvcyB9O1xuIl19